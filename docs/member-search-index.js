memberSearchIndex = [{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java","c":"JavaPseudoFile","l":"addImport(String)","u":"addImport(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseClass","l":"BaseClass(List<String>, int, JavaPseudoFile, String)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"BaseCompiler","l":"BaseCompiler()","u":"%3Cinit%3E()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseFunction","l":"BaseFunction(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"BlankLine","l":"BlankLine(int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"Break","l":"Break(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"CallFunction","l":"CallFunction(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CommentLine","l":"CommentLine(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CommentLine","l":"commmentStarter"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"CompilationItem(ArrayList<String>, int, JavaPseudoFile)","u":"%3Cinit%3E(java.util.ArrayList,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"CompilationItem(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"MainFunction","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"DoWhileLoop","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ElseIfStatement","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ElseStatement","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ForLoop","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"IFStatement","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"WhileLoop","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java","c":"JavaPseudoFile","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"BaseCompiler","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"SingleLineItem","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseClass","l":"compile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"ConstructorFunction(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"Continue","l":"Continue(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"DataType(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"DoWhileLoop","l":"DoWhileLoop(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ElseIfStatement","l":"ElseIfStatement(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ElseStatement","l":"ElseStatement(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"findType(String, BaseCompiler)","u":"findType(java.lang.String,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"ForLoop","l":"ForLoop(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"BaseCompiler","l":"getChildren()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"CallFunction","l":"getData()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"getFile()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"PseudoFile","l":"getFileName()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java","c":"JavaPseudoFile","l":"getImports()"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"getIndent(String)","u":"getIndent(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"PseudoFile","l":"getIndentations()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"SingleLineItem","l":"getLine()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"getLines()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"PseudoFile","l":"getLines()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"CallFunction","l":"getName()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"getName()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"getName()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"getName()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"SingleLineItem","l":"getNewLine()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"getParent()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CompilationItem","l":"getStartingNum()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"getStatic()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Read","l":"getType()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Return","l":"getType()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"getType()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseClass","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseFunction","l":"getType(String)","u":"getType(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"getUpdating()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Return","l":"getValue()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"getVars()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"getVars()"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"hasComment(String)","u":"hasComment(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseClass","l":"hasVar(String)","u":"hasVar(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseFunction","l":"hasVar(String)","u":"hasVar(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"IFStatement","l":"IFStatement(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"isBoolean(String)","u":"isBoolean(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"isDouble(String)","u":"isDouble(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"isInteger(String)","u":"isInteger(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"isNumber(String)","u":"isNumber(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java","c":"JavaPseudoFile","l":"JavaPseudoFile(File)","u":"%3Cinit%3E(java.io.File)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Main","l":"Main()","u":"%3Cinit%3E()"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Main","l":"main(String[])","u":"main(java.lang.String[])"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.classes","c":"MainClass","l":"MainClass(List<String>, int, JavaPseudoFile, String)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"MainFunction","l":"MainFunction(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.classes","c":"NormalClass","l":"NormalClass(List<String>, int, JavaPseudoFile, String)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"NormalFunction(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Print","l":"Print(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Printline","l":"Printline(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"PseudoFile","l":"PseudoFile(File, String)","u":"%3Cinit%3E(java.io.File,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Read","l":"Read(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"readLinesFromFile(File)","u":"readLinesFromFile(java.io.File)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Return","l":"Return(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"PseudoFile","l":"run()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"setNewLine()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"SingleLineItem","l":"setNewLine(String)","u":"setNewLine(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"setReturnType(String)","u":"setReturnType(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"setStatic(boolean)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"setType(String)","u":"setType(java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.classes","c":"MainClass","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.classes","c":"NormalClass","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"CallFunction","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Print","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Printline","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Read","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Return","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"Break","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"Continue","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java","c":"JavaPseudoFile","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib","c":"BaseCompiler","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"BlankLine","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"CommentLine","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseFunction","l":"setup()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"SingleLineItem","l":"SingleLineItem(String, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.lang.String,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.core","c":"Read","l":"updateType()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.items","c":"DataType","l":"updateType()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseClass","l":"updateTypes(String, String)","u":"updateTypes(java.lang.String,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.lib.java","c":"BaseFunction","l":"updateTypes(String, String)","u":"updateTypes(java.lang.String,java.lang.String)"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"ConstructorFunction","l":"updateVariables()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions","c":"NormalFunction","l":"updateVariables()"},{"p":"com.github.CoryBorek.PseudocodeCompiler","c":"Util","l":"Util()","u":"%3Cinit%3E()"},{"p":"com.github.CoryBorek.PseudocodeCompiler.impl.java.functions.statements","c":"WhileLoop","l":"WhileLoop(List<String>, int, JavaPseudoFile, BaseCompiler)","u":"%3Cinit%3E(java.util.List,int,com.github.CoryBorek.PseudocodeCompiler.impl.java.JavaPseudoFile,com.github.CoryBorek.PseudocodeCompiler.lib.BaseCompiler)"}];updateSearchResults();